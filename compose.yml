services:
  api01: &api
    hostname: api01
    profiles: [ "rinha" ]
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      PORT: 3000
      DB_URL: postgres://admin:123@db:5432/rinha?sslmode=disable
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "50MB"

  api02:
    <<: *api
    hostname: api02
    environment:
      PORT: 3001
      DB_URL: postgres://admin:123@db:5432/rinha?sslmode=disable
    ports:
      - "3001:3001"

  nginx:
    image: nginx:latest
    profiles: [ "rinha" ]
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      # Obrigatório expor/usar a porta 9999 no load balancer!
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "50MB"

  db:
    image: postgres:latest
    hostname: db
    profiles: [ "db", "rinha" ]
    environment:
      - POSTGRES_PASSWORD=123
      - POSTGRES_USER=admin
      - POSTGRES_DB=rinha
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d rinha" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./script.sql:/docker-entrypoint-initdb.d/script.sql
    deploy:
      resources:
        limits:
          # Note que a soma de todos os limites dos serviços
          # aqui declarados é de 1.5 unidades de CPU e 550MB
          # de memória. A distribuição feita aqui é apenas
          # um exemplo – distribua como quiser.
          cpus: "0.9"
          memory: "400MB"

# O uso do modo `bridge` deve ser adequado à carga que será usada no teste.
# A edição anterior se beneficiou do modo host pois o volume de requisições
# era relativamente alto e a virtualização da rede se tornou um gargalo, mas
# este modo é mais complexo de ser configurado. Fique à vontade para usar o
# modo que quiser desde que não conflite com portas trivialmente usadas em um
# SO.
networks:
  default:
    driver: bridge
    name: rinha-nginx-2024q1
volumes:
  pgdata:
